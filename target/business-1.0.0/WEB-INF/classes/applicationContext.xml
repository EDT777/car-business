<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--    配置DataSource 对象-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql:///business?characterEncoding=UTF-8"/>
        <property name="username" value="root"/>
        <property name="password" value="19980220"/>
    </bean>

    <!--    配置SqlSessionFactory对象-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="typeAliasesPackage" value="com.edt.domain"/>
        <!--      分页拦截器-->
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <!--使用下面的方式配置参数，一行配置一个 -->
                        <value>
                            pageSizeZero=true <!--0的时候就是查所有 -->
                            reasonable=true <!-- pageNum<=0 时会查询第一页， pageNum>pages（超过总数时），会查询最后一页 -->
                        </value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>

    <!--    配置Mapper 对象-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.edt.mapper"/>
    </bean>

    <!--    配置spring有效化范围-->
    <context:component-scan base-package="com.edt"/>

    <!--配置事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--    处理静态资源-->
    <mvc:default-servlet-handler/>
    <!--    配置mvc注解解析器-->
    <mvc:annotation-driven/>
    <!--配置事务解析器  -->
    <tx:annotation-driven/>
    <!--文件上传解析器 id必须是multipartResolver-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!--最大上传文件大小 10M-->
        <property name="maxUploadSize" value="#{1024*1024*10}"/>
    </bean>

    <!--!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!-->
    <!--      JSP视图解析器,解析不了freemarker -->
    <!--    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
    <!--        <property name="prefix" value="/WEB-INF/views/"/>-->
    <!--        <property name="suffix" value=".jsp"/>-->
    <!--    </bean>-->

    <!--    配置视图解析器-->
    <!-- 注册 FreeMarker 配置类 -->
    <bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <!-- 配置 FreeMarker 的文件编码 -->
        <property name="defaultEncoding" value="UTF-8"/>
        <!-- 配置 FreeMarker 寻找模板的路径 -->
        <property name="templateLoaderPath" value="/WEB-INF/views/"/>
        <property name="freemarkerSettings">
            <props>
                <!-- 兼容模式 ，配了后不需要另外处理空值问题，时间格式除外 -->
                <prop key="classic_compatible">true</prop>
            </props>
        </property>
    </bean>
    <!-- 注册 FreeMarker 视图解析器 -->
    <bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <!-- 是否把session中的attribute复制到模板的属性集中，可以使用FreeMarker的表达式来访问并显示-->
        <property name="exposeSessionAttributes" value="true"/>
        <!-- 配置逻辑视图自动添加的后缀名 -->
        <property name="suffix" value=".ftl"/>
        <!-- 配置响应头中 Content-Type 的指 -->
        <property name="contentType" value="text/html;charset=UTF-8"/>
    </bean>


    <!--    配置拦截器-->
    <mvc:interceptors>
        <!--        执行顺序 就是配置顺序-->
        <mvc:interceptor>
            <mvc:mapping path="/**"/><!--需要拦截的路径 -->
            <mvc:exclude-mapping path="/index"/><!--排除拦截登陆页面的路径 -->
            <mvc:exclude-mapping path="/systemDictionaryItem/selectByTypeSn"/><!--排除拦截路径 -->
            <mvc:exclude-mapping path="/appointment/save"/>
            <mvc:exclude-mapping path="/login.html"/><!--排除拦截登陆页面的路径 -->
            <mvc:exclude-mapping path="/userLogin"/><!--排除拦截登陆控制器的路径 -->
            <mvc:exclude-mapping path="/js/**"/><!--排除拦截的路径 -->
            <mvc:exclude-mapping path="/css/**"/><!--排除拦截的路径 -->
            <mvc:exclude-mapping path="/img/**"/><!--排除拦截的路径 -->
            <bean class="com.edt.web.interceptor.LoginInterceptor"/>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/**"/><!--需要拦截的路径 -->
            <mvc:exclude-mapping path="/index"/><!--排除拦截登陆页面的路径 -->
            <mvc:exclude-mapping path="/nopermission"/><!--排除拦截的路径 -->
            <mvc:exclude-mapping path="/login.html"/><!--排除拦截的路径 -->
            <mvc:exclude-mapping path="/userLogin"/><!--排除拦截的路径 -->
            <mvc:exclude-mapping path="/js/**"/><!--排除拦截的路径 -->
            <mvc:exclude-mapping path="/css/**"/><!--排除拦截的路径 -->
            <mvc:exclude-mapping path="/img/**"/><!--排除拦截的路径 -->
            <bean class="com.edt.web.interceptor.PermissionInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

</beans>